{"version":3,"sources":["out/resource/hills_tex.png","components/title/Title.js","components/title/TitleContainer.js","out/DragonBonesScene.js","out/PixiBase.js","components/pixiComponent/PixiComponent.js","components/pixiComponent/PixiComponentContainer.js"],"names":["module","exports","__webpack_require__","p","Title","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","open","className","currentClassName","overlayIsActive","setState","react_default","a","createElement","style","position","display","flexDirection","width","height","margin","animationDelay","React","Component","connect","overlay","dispatch","overlayActive","isActive","DragonBonesScene","canvas","skeleton","texJson","texPng","hasText","ARMATURE_DISPLAY_NAME","_resources","push","armatureDisplay","xScaleFactor","yScaleFactor","finalScaleFactor","_renderer","scale","x","y","focusCorrectionX","focusCorrectionY","xOffset","yOffset","text","childToRemove","getChildByName","TEXT_NAME","removeChildAt","getChildIndex","createText","animationName","animationReady","animation","play","resize","adjustFocus","checkScale","factory","window","dragonBones","PixiFactory","parseDragonBonesData","parseTextureAtlasData","_pixiResources","texture","buildArmatureDisplay","name","anchor","alphaFilter","PIXI","AlphaFilter","alpha","filters","addChild","shared","add","alphaHandler","remove","PixiBase","_background","EMPTY","clientWidth","clientHeight","backgroundColor","appendChild","view","setTimeout","stageWidth","stageHeight","reset","_loadResources","deltaTime","render","minFPS","_renderHandler","_this2","binaryOptions","loadType","Resource","LOAD_TYPE","XHR","xhrType","XHR_RESPONSE_TYPE","BUFFER","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","resource","value","indexOf","err","return","once","loader","resources","_onStart","_startRenderTick","load","string","index","align","PixiComponent","gameCanvas","handleChange","bind","assertThisInitialized","pixiHandler","formValue","readyForUpdate","addEventListener","resizeRenderer","playAnimation","removeEventListener","innerHeight","forceUpdate","event","target","component","ref","thisDiv","flex","toString","TitleContainer","animationText","changeText"],"mappings":"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","file":"static/js/1.4d9f8aae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hills_tex.d150d0de.png\";","import React from 'react';\r\nimport './title.scss';\r\n\r\nexport default class Title extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: false,\r\n            className: 'fadeInUp'\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        let currentClassName = (this.props.overlayIsActive === 'true') ? 'fadeOutUp' : 'fadeInUp';\r\n        if(currentClassName !== this.state.className){\r\n            this.setState({className: currentClassName});\r\n        }\r\n\r\n        return (\r\n            <div  style={{position: 'fixed', display: 'flex', flexDirection:'column', width: '100%', height: '100%'}}>\r\n                {/*<div style={{flex:\"1 270px\"}}/>\r\n                            <div style={{flex:\"1 270px\"}}>\r\n                                <div style={{marginRight:'auto',marginLeft:'auto'}}>\r\n                                    helo\r\n                                </div>\r\n                            </div>\r\n                            <div style={{flex:\"1 270px\"}}/>*/}\r\n                <div className='title' style={{margin:'auto'}}>\r\n                    <div className={this.state.className + \" animated\"}>Tobias Udd</div>\r\n                    <div className={this.state.className + \" animated subtitle\"} style={{animationDelay: '.8s'}} >software engieering student @ kth</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import { connect } from \"react-redux\";\r\nimport Title from './Title.js';\r\nimport { overlayActive } from '../../actions/overlayActions.js';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        overlayIsActive: state.overlay.overlayIsActive\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        overlayActive: (isActive) =>\r\n            dispatch(overlayActive(isActive))\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Title);","/**\r\n * How to use\r\n * 1. Load data.\r\n *\r\n * 2. Parse data.\r\n *    factory.parseDragonBonesData();\r\n *    factory.parseTextureAtlasData();\r\n *\r\n * 3. Build armature.\r\n *    armatureDisplay = factory.buildArmatureDisplay(\"armatureName\");\r\n *\r\n * 4. Play animation.\r\n *    armatureDisplay.animation.play(\"animationName\");\r\n *\r\n * 5. Add armature to stage.\r\n *    addChild(armatureDisplay);\r\n */\r\n/// <reference path=\"./dragonBones.d.ts\" />\r\nimport * as PIXI from 'pixi.js';\r\nimport PixiBase from './PixiBase.js';\r\nexport default class DragonBonesScene extends PixiBase {\r\n    constructor(canvas, skeleton, texJson, texPng) {\r\n        super(canvas);\r\n        this.canvas = canvas;\r\n        this.skeleton = skeleton;\r\n        this.texJson = texJson;\r\n        this.texPng = texPng;\r\n        this.hasText = false;\r\n        this.ARMATURE_DISPLAY_NAME = \"armature\";\r\n        /*\r\n        The JSON files are loaded by webpack in PixiComponent.js, and can be passed through the constructor.\r\n        The texture atlas data aka tex.png are placed by webpack as is in the directory /static/media. From there they can be loaded by the Pixi loader given the url below.\r\n         */\r\n        /*\r\n        The resource urls are pushed to the _resources array to be loaded.\r\n         */\r\n        this._resources.push(\r\n        // \"src/out/resource/NewProject_ske.json\",\r\n        //\"src/out/resource/NewProject_tex.json\",\r\n        //\"src/out/resource/NewProject_tex.png\"\r\n        this.texPng);\r\n    }\r\n    checkScale(armatureDisplay) {\r\n        // the animation dimensions are 1920x1080\r\n        if ((this._renderer.height > 1080) || (this._renderer.width > 1920)) {\r\n            let xScaleFactor;\r\n            let yScaleFactor;\r\n            let finalScaleFactor;\r\n            xScaleFactor = this._renderer.height / 1080;\r\n            yScaleFactor = this._renderer.width / 1920;\r\n            finalScaleFactor = (xScaleFactor > yScaleFactor) ? xScaleFactor : yScaleFactor;\r\n            finalScaleFactor = (finalScaleFactor < 1) ? 1 : finalScaleFactor;\r\n            armatureDisplay.scale.x = finalScaleFactor;\r\n            armatureDisplay.scale.y = finalScaleFactor;\r\n        }\r\n    }\r\n    adjustFocus(armatureDisplay) {\r\n        let focusCorrectionX;\r\n        let focusCorrectionY;\r\n        if ((this._renderer.width / this._renderer.height) > 0.7) {\r\n            focusCorrectionX = (this._renderer.width < 1300) ? 300 : 0;\r\n            focusCorrectionY = (this._renderer.height < 800) ? 100 : 0;\r\n        }\r\n        else {\r\n            let offsetCompensation = (this._renderer.width < 560) ? (this.xOffset / 4) : 0;\r\n            focusCorrectionX = 600 + offsetCompensation;\r\n            focusCorrectionY = 0;\r\n        }\r\n        armatureDisplay.x = (this._renderer.width / 2) - this.xOffset + focusCorrectionX;\r\n        armatureDisplay.y = (this._renderer.height / 2) - this.yOffset - focusCorrectionY;\r\n    }\r\n    changeText(text) {\r\n        if (this.hasText) {\r\n            let childToRemove = this.getChildByName(this.TEXT_NAME);\r\n            this.removeChildAt(this.getChildIndex(childToRemove));\r\n            this.hasText = false;\r\n        }\r\n        this.createText(text, 2);\r\n        this.hasText = true;\r\n    }\r\n    playAnimation(animationName) {\r\n        if (this.animationReady) {\r\n            let armatureDisplay = this.getChildByName(this.ARMATURE_DISPLAY_NAME);\r\n            armatureDisplay.animation.play(animationName);\r\n        }\r\n    }\r\n    resizeRenderer(width, height) {\r\n        this._renderer.resize(width, height);\r\n        let armatureDisplay = this.getChildByName(this.ARMATURE_DISPLAY_NAME);\r\n        this.adjustFocus(armatureDisplay);\r\n        this.checkScale(armatureDisplay);\r\n    }\r\n    _onStart() {\r\n        const factory = window.dragonBones.PixiFactory.factory;\r\n        factory.parseDragonBonesData(this.skeleton);\r\n        factory.parseTextureAtlasData(this.texJson, this._pixiResources[this.texPng].texture);\r\n        const armatureDisplay = factory.buildArmatureDisplay(\"Armature\", \"hills\");\r\n        armatureDisplay.animation.play(\"default\");\r\n        armatureDisplay.name = this.ARMATURE_DISPLAY_NAME;\r\n        this.animationReady = true;\r\n        armatureDisplay.anchor.x = 0;\r\n        armatureDisplay.anchor.y = 0;\r\n        this.xOffset = (this._renderer.width / 2);\r\n        this.yOffset = (this._renderer.height / 2);\r\n        this.adjustFocus(armatureDisplay);\r\n        this.checkScale(armatureDisplay);\r\n        let alphaFilter = new PIXI.filters.AlphaFilter();\r\n        alphaFilter.alpha = 0;\r\n        armatureDisplay.filters = [alphaFilter];\r\n        /**\r\n        let brush =  PIXI.Sprite.fromImage('https://i.imgur.com/SIfxYjW.png');\r\n        this.addChild(brush);\r\n        armatureDisplay.mask = brush;\r\n        **/\r\n        this.addChild(armatureDisplay);\r\n        PIXI.ticker.shared.add(function alphaHandler() {\r\n            if (alphaFilter.alpha < 1) {\r\n                alphaFilter.alpha += .01;\r\n            }\r\n            else {\r\n                PIXI.ticker.shared.remove(alphaHandler);\r\n            }\r\n        });\r\n        // this.createText(\"booooooooi\", 2);\r\n        //this.hasText = true;\r\n    }\r\n}\r\n","/// <reference path=\"./dragonBones.d.ts\" />\r\nimport * as PIXI from 'pixi.js';\r\nexport default class PixiBase extends PIXI.Container {\r\n    constructor(canvas) {\r\n        super();\r\n        this._background = new PIXI.Sprite(PIXI.Texture.EMPTY);\r\n        this._resources = [];\r\n        this.TEXT_NAME = \"text\";\r\n        this._renderer = new PIXI.WebGLRenderer(canvas.clientWidth, canvas.clientHeight);\r\n        this._renderer.backgroundColor = 0x000000;\r\n        //this._resources.push(BaseDemo.BACKGROUND_URL);\r\n        canvas.appendChild(this._renderer.view);\r\n        //\r\n        setTimeout(() => {\r\n            this.x = this.stageWidth * 0.5;\r\n            this.y = this.stageHeight * 0.5;\r\n            PIXI.loader.reset();\r\n            this._loadResources();\r\n        }, 10);\r\n    }\r\n    _renderHandler(deltaTime) {\r\n        this._renderer.render(this);\r\n    }\r\n    /*\r\n    minFPS caps the delta value, 60 -> delta capped at 1. Delta will go over 1 if the browser is struggling, causing the animation to\r\n    play too fast, as the fps is still 60.\r\n     */\r\n    _startRenderTick() {\r\n        PIXI.ticker.shared.minFPS = 60;\r\n        PIXI.ticker.shared.add(this._renderHandler, this);\r\n    }\r\n    _loadResources() {\r\n        const binaryOptions = { loadType: PIXI.loaders.Resource.LOAD_TYPE.XHR, xhrType: PIXI.loaders.Resource.XHR_RESPONSE_TYPE.BUFFER };\r\n        for (const resource of this._resources) {\r\n            //console.log(resource);\r\n            if (resource.indexOf(\"dbbin\") > 0) {\r\n                PIXI.loader.add(resource, resource, binaryOptions);\r\n            }\r\n            else {\r\n                PIXI.loader.add(resource, resource);\r\n            }\r\n        }\r\n        PIXI.loader.once(\"complete\", (loader, resources) => {\r\n            this._pixiResources = resources;\r\n            /**\r\n            this._background.texture = this._pixiResources[BaseDemo.BACKGROUND_URL].texture;\r\n            this._background.x = -this._background.texture.width * 0.5;\r\n            this._background.y = -this._background.texture.height * 0.5;\r\n            this.addChild(this._background);\r\n            **/\r\n            this._onStart();\r\n            this._startRenderTick(); // Make sure render after dragonBones update.\r\n        });\r\n        PIXI.loader.load();\r\n    }\r\n    createText(string, index) {\r\n        const text = new PIXI.Text(string, { align: \"center\" });\r\n        text.text = string;\r\n        text.name = this.TEXT_NAME;\r\n        text.scale.x = 0.7;\r\n        text.scale.y = 0.7;\r\n        text.x = -text.width * 0.5;\r\n        text.y = 100.0 - this.stageHeight * 0.5;\r\n        this.addChild(text);\r\n        return text;\r\n    }\r\n    get stageWidth() {\r\n        return this._renderer.width;\r\n    }\r\n    get stageHeight() {\r\n        return this._renderer.height;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './pixiComponent.scss';\r\nimport TitleContainer from '../title/TitleContainer.js';\r\n\r\nimport DragonBonesScene from '../../out/DragonBonesScene.js';\r\nimport skeleton from '../../out/resource/hills_ske.json';\r\nimport texJson from \"../../out/resource/hills_tex.json\";\r\nimport texPng from \"../../out/resource/hills_tex.png\"; //Import so webpack puts the png in the build/static/media folder. Webpack returns the path to the file.\r\n\r\n//import changeText from \"../../actions/animationActions\";\r\n\r\nexport default class PixiComponent extends React.Component{\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.gameCanvas = null;\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n        this.state = {\r\n            pixiHandler: [],\r\n            //readyForUpdate: false,\r\n            formValue: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let component = this;\r\n        //let elHeight = document.getElementById('containerDiv').clientHeight;\r\n        component.setState({pixiHandler: new DragonBonesScene(this.gameCanvas, skeleton, texJson, texPng)});\r\n        component.setState({readyForUpdate: true});\r\n        window.addEventListener(\"resize\", this.resizeRenderer);\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        if(this.state.readyForUpdate) {\r\n            this.state.pixiHandler.playAnimation(this.props.animation);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.resizeRenderer);\r\n    }\r\n\r\n    resizeRenderer()  {\r\n        //console.log(this.gameCanvas.clientHeight+\"  \"+this.gameCanvas.clientWidth+\" canvas\");\r\n        this.state.pixiHandler.resizeRenderer(this.gameCanvas.clientWidth, window.innerHeight -3);\r\n        this.forceUpdate();\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({formValue: event.target.value});\r\n    }\r\n\r\n    render(){\r\n        let component = this;\r\n        //let height = window.innerHeight -103;\r\n        //let height = window.innerHeight -67;\r\n        let height = window.innerHeight -3;\r\n\r\n        return (\r\n            <div>\r\n                <div style={{display:\"flex\", flexDirection: \"column\"}}>\r\n                    <div className=\"pixiCanvas\" ref={(thisDiv) => {component.gameCanvas = thisDiv}} style={{flex:\"1 1 \"+height.toString()+\"px\"}} >\r\n                        <TitleContainer/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","import { connect } from \"react-redux\";\r\nimport PixiComponent from './PixiComponent.js';\r\nimport { changeText } from '../../actions/animationActions.js';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        text: state.animation.animationText,\r\n        animation: state.animation.animationName\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeText: (text) =>\r\n            dispatch(changeText(text))\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(PixiComponent);"],"sourceRoot":""}